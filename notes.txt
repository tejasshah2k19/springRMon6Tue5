framework -> 
		collection of design pattern
		

what is design pattern? 
	common problem solution 
	

Signup.jsp -> data -> submit -> controller -> read , new bean , new dao -> 
								dbConnection -> database 
								preparedStatement -> pstmt 
								 
							1:servlet 
							2:bean 
							3:dao 
							4:db
							5:pstmt 
							
							500 request -> 	servlet(1)
											bean(500)
											dao(500)
											db(500)
											pstmt(500)	
	
Singleton design pattern -> class -> object -> 1 time -> single instance 
XX
XX
XX
	
	
	
	
	

spring ->project-> 
	file -> new -> spring starter project-> 


dep:- 
1)spring web 
2)spring boot dev-tools 


external->
jsp -> tomcat embeded jasper -> dep 


configuration->
application.properties 

#server
server.port=9898

#views
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

how to create controller? 


---------------------------------------------------------------------------------------------
 
 500 class -> singleton -> 
 
 	server start -> static -> load -> object -> 500
 	eager loading -> 
 	early binding ->
 	
	when i use -> that time init -> 
	 	Lazy Loading -> 
 
 
---------------------------------------------------------------------------------------------
 
 
 
1) add validation dep in pom.xml { add/edit starter}
2) add annotation in bean 
3) activate the validation using @Validated 
4) catch the result of validation inside BindingResult 

 
---------------------------------------------------------------------------------------------
 
 spring framework : java : web 
 
 hibernate : java : data base 
 					create table
 					alter table 
 					insert 
 					update 
 					delete 
 					select 
 					
 how ? 
 	data base -> 
 					1) mysql driver 
 					2) spring-data-jpa 
 					
 					
 	application.properties 
 	
	#database
	spring.datasource.url=jdbc:mysql://localhost:3306/springmon6tue5
	spring.datasource.username=root
	spring.datasource.password=root
	
	#hibernate
	spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
	spring.jpa.hibernate.ddl-auto=update
	
	spring.jpa.show-sql=true
	spring.jpa.properties.hibernate.format_sql=true
	 
 
 ----------------------------------------------------------------------------------------
 
database --> 
		1) myslq connector / pg driver / oracle 
		2) spring data jpa 
		
configuration ->
		application.properties 
		
		
		1 url
		2 username 
		3 password  
		
----------------------------------------------------------------------------------		
		
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 